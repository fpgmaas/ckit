{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"ckit is a command line utility to help you organise and quickly run frequently used commands. Example configuration files Quickstart \u00b6 Installation \u00b6 ckit can be installed by running pip install ckit To get started, run ckit init which will prompt to add a ckit/ckit.yaml file in the user's home directory for global commands, and/or a ckit.yaml file in the current directory for commands specific to the current project. Alternatively, run ckit init --download-global-defaults to get started with a richer set of examples in the global configuration directory, see ckit-files . To use ckit to run any of the pre-configured commands, simply run ckit For details regarding the configuration files, see the configuration section of the documentation. Examples \u00b6 For a list of example configuration files, see ckit-files . Repository initiated with fpgmaas/cookiecutter-poetry .","title":"Home"},{"location":"#quickstart","text":"","title":"Quickstart"},{"location":"#installation","text":"ckit can be installed by running pip install ckit To get started, run ckit init which will prompt to add a ckit/ckit.yaml file in the user's home directory for global commands, and/or a ckit.yaml file in the current directory for commands specific to the current project. Alternatively, run ckit init --download-global-defaults to get started with a richer set of examples in the global configuration directory, see ckit-files . To use ckit to run any of the pre-configured commands, simply run ckit For details regarding the configuration files, see the configuration section of the documentation.","title":"Installation"},{"location":"#examples","text":"For a list of example configuration files, see ckit-files . Repository initiated with fpgmaas/cookiecutter-poetry .","title":"Examples"},{"location":"configuration/","text":"Configuration \u00b6 ckit looks for configuration in the following two locations From a ckit.yaml file in the current directory From any .yaml file in the the global configuration directory, which is defaulted to ~/ckit , but which can be overridden with the environment variable CKIT_HOME . Each .yaml file can contain one or more command groups, each containg one or more commands or other groups group-1: subgroup-1: command-a: ... command-b: ... subgroup-2: command-1: ... command-2: ... group-2: command-a: ... command-b: ... Command \u00b6 A command has the following attributes: cmd \u00b6 A string, or a list of strings, with the terminal command(s) to be run. Valid examples are: command: cmd: \"echo Current user is $USER\" command: cmd: - \"echo Lorem ipsum dolor sit amet,\" - \"echo consectetur adipiscing elit\" echo (Optional) \u00b6 A boolean flag. By default, commands are printed to the terminal before being run. This can be suppressed by passing false to this argument. Example: command: cmd: \"echo Hello world!\" echo: false args (Optional) \u00b6 A list of arguments for the command. The user will be prompted for input before the command(s) specified in cmd will be run. The value of an argument named name will be made available as $name in the cmd . For example: command: cmd: \"echo My name is $name\" args: - name Arguments can be given a default value as follows: command: cmd: \"echo My name is $name\" args: - name: \"Calvin\" booleans (Optional) \u00b6 A list of boolean arguments for the command, where the value in the command will depend on a Y/N prompt before the command(s) specified in cmd will be run. The value of a boolean argument named name will replace $name in the cmd . For example: command-with-boolean: cmd: \"ls $detailed\" booleans: - detailed: prompt: \"Show details?\" if_true: -lh By default, the value that is passed when the user chooses N is \"\" . This can be changed with the if_false argument. The default choice can be changed from Y to N with the default argument. See the following example: command-with-boolean: cmd: \"echo I like $fruit\" echo: false booleans: - fruit: prompt: \"Do you like apples (y) or pears (n)?\" if_true: apples if_false: pears default: false","title":"Configuration"},{"location":"configuration/#configuration","text":"ckit looks for configuration in the following two locations From a ckit.yaml file in the current directory From any .yaml file in the the global configuration directory, which is defaulted to ~/ckit , but which can be overridden with the environment variable CKIT_HOME . Each .yaml file can contain one or more command groups, each containg one or more commands or other groups group-1: subgroup-1: command-a: ... command-b: ... subgroup-2: command-1: ... command-2: ... group-2: command-a: ... command-b: ...","title":"Configuration"},{"location":"configuration/#command","text":"A command has the following attributes:","title":"Command"},{"location":"configuration/#cmd","text":"A string, or a list of strings, with the terminal command(s) to be run. Valid examples are: command: cmd: \"echo Current user is $USER\" command: cmd: - \"echo Lorem ipsum dolor sit amet,\" - \"echo consectetur adipiscing elit\"","title":"cmd"},{"location":"configuration/#echo-optional","text":"A boolean flag. By default, commands are printed to the terminal before being run. This can be suppressed by passing false to this argument. Example: command: cmd: \"echo Hello world!\" echo: false","title":"echo (Optional)"},{"location":"configuration/#args-optional","text":"A list of arguments for the command. The user will be prompted for input before the command(s) specified in cmd will be run. The value of an argument named name will be made available as $name in the cmd . For example: command: cmd: \"echo My name is $name\" args: - name Arguments can be given a default value as follows: command: cmd: \"echo My name is $name\" args: - name: \"Calvin\"","title":"args (Optional)"},{"location":"configuration/#booleans-optional","text":"A list of boolean arguments for the command, where the value in the command will depend on a Y/N prompt before the command(s) specified in cmd will be run. The value of a boolean argument named name will replace $name in the cmd . For example: command-with-boolean: cmd: \"ls $detailed\" booleans: - detailed: prompt: \"Show details?\" if_true: -lh By default, the value that is passed when the user chooses N is \"\" . This can be changed with the if_false argument. The default choice can be changed from Y to N with the default argument. See the following example: command-with-boolean: cmd: \"echo I like $fruit\" echo: false booleans: - fruit: prompt: \"Do you like apples (y) or pears (n)?\" if_true: apples if_false: pears default: false","title":"booleans (Optional)"}]}